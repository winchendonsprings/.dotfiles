! Compile xft: Attempt to find a visual with the given bit depth; option -depth.
! URxvt*depth: bitdepth

! Compile xft: Turn on/off double-buffering for xft (default enabled).  On some
! URxvt*buffered: boolean

! Create the window with the specified X window geometry [default 80x24]; option
! URxvt*geometry: geom

! Use the specified colour as the windows background colour [default White]; option
! URxvt*background: colour
!URxvt*background: #222222

! Use the specified colour as the windows foreground colour [default Black]; option
! URxvt*foreground: colour
!URxvt*foreground: #eeeeee

! Use the specified colour for the colour value n, where 0-7 corresponds to low-
! URxvt*colorn: colour

! 
! URxvt*colorBD: colour

! Use the specified colour to display bold or italic characters when the foreground
! URxvt*colorIT: colour

! Use the specified colour to display underlined characters when the foreground colour
! URxvt*colorUL: colour

! If set, use the specified colour as the colour for the underline itself. If unset, use
! URxvt*underlineColor: colour

! If set, use the specified colour as the background for highlighted characters. If
! URxvt*highlightColor: colour

! If set and highlightColor is set, use the specified colour as the foreground for
! URxvt*highlightTextColor: colour

! Use the specified colour for the cursor. The default is to use the foreground colour;
! URxvt*cursorColor: colour
!URxvt*cursorColor: #eeeeeee

! Use the specified colour for the colour of the cursor text. For this to take effect,
! URxvt*cursorColor2: colour

! True: simulate reverse video by foreground and background colours; option -rv. False:
! URxvt*reverseVideo: boolean

! True: specify that jump scrolling should be used. When receiving lots of lines, urxvt
! URxvt*jumpScroll: boolean

! True: (the default) specify that skip scrolling should be used. When receiving lots of
! URxvt*skipScroll: boolean

! Turn on/off pseudo-transparency by using the root pixmap as background.
! URxvt*transparent: boolean

! Fade the text by the given percentage when focus is lost; option -fade.
! URxvt*fading: number

! Fade to this colour, when fading is used (see fading:). The default colour is black;
! URxvt*fadeColor: colour

! Tint the transparent background with the given colour. If the RENDER extension is not
! URxvt*tintColor: colour

! Darken (0 .. 99) or lighten (101 .. 200) the transparent background.  A value of 100
! URxvt*shading: number

! Specify background blending type; option -blt.
! URxvt*blendType: string

! Apply gaussian blur with the specified radius to the transparent background; option
! URxvt*blurRadius: number

! Set the application icon pixmap; option -icon.
! URxvt*iconFile: file

! Use the specified colour for the scrollbar [default #B2B2B2].
! URxvt*scrollColor: colour

! Use the specified colour for the scrollbars trough area [default #969696]. Only
! URxvt*troughColor: colour

! The colour of the border around the text area and between the scrollbar and the text.
! URxvt*borderColor: colour

! Use the specified image file for the background and also optionally specify a colon
! URxvt*backgroundPixmap: file[;oplist]

! Specify the colon-delimited search path for finding background image files.
! URxvt*path: path

! Select the fonts to be used. This is a comma separated list of font names that are
! URxvt*font: fontlist

!URxvt*font: xft:DejaVu Sans Mono:pixelsize=9
!URxvt*boldFont: xft:DejaVu Sans Mono:pixelsize=9
!URxvt*italicFont: xft:DejaVu Sans Mono:italic:pixelsize=9
!URxvt*boldItalicFont: xft:DejaVu Sans Mono:bolditalic:pixelsize=9
!
!URxvt*letterSpace: -1

! URxvt*boldFont: fontlist

! 
! URxvt*italicFont: fontlist

! The font list to use for displaying bold, italic or bold italic characters,
! URxvt*boldItalicFont: fontlist

! When font styles are not enabled, or this option is enabled (True, option -is, the
! URxvt*intensityStyles: boolean

! Set window title string, the default title is the command-line specified after the -e
! URxvt*title: string

! Set the name used to label the windows icon or displayed in an icon manager window,
! URxvt*iconName: string

! True: de-iconify (map) on receipt of a bell character. False: no de-iconify (map) on
! URxvt*mapAlert: boolean

! True: set the urgency hint for the wm on receipt of a bell character.  False: do not
! URxvt*urgentOnBell: boolean

! True: use visual bell on receipt of a bell character; option -vb.  False: no visual
! URxvt*visualBell: boolean

! True: start as a login shell by prepending a - to argv[0] of the shell; option -ls.
! URxvt*loginShell: boolean

! True: inhibit writing record into the system log file utmp; option -ut. False: write
! URxvt*utmpInhibit: boolean

! Specify a command pipe for vt100 printer [default lpr(1)]. Use Print to initiate a
! URxvt*print-pipe: string

! Set scrollbar style to rxvt, plain, next or xterm. plain is the authors favourite.
! URxvt*scrollstyle: mode

! Set the scrollbar width in pixels.
! URxvt*thickness: number

! True: enable the scrollbar [default]; option -sb. False: disable the scrollbar; option
! URxvt*scrollBar: boolean

! True: place the scrollbar on the right of the window; option -sr.  False: place the
! URxvt*scrollBar_right: boolean

! True: display an rxvt scrollbar without a trough; option -st.  False: display an rxvt
! URxvt*scrollBar_floating: boolean

! Align the top, bottom or centre [default] of the scrollbar thumb with the pointer on
! URxvt*scrollBar_align: mode

! True: scroll to bottom when tty receives output; option -si.  False: do not scroll to
! URxvt*scrollTtyOutput: boolean

! True: scroll with scrollback buffer when tty receives new lines (i.e.  try to show the
! URxvt*scrollWithBuffer: boolean

! True: scroll to bottom when a non-special key is pressed. Special keys are those which
! URxvt*scrollTtyKeypress: boolean

! Save number lines in the scrollback buffer [default 64]. This resource is limited on
! URxvt*saveLines: number
!URxvt*saveLines: 15000

! Internal border of number pixels. This resource is limited to 100; option -b.
! URxvt*internalBorder: number

! External border of number pixels. This resource is limited to 100; option -w, -bw,
! URxvt*externalBorder: number

! Set MWM hints to request a borderless window, i.e. if honoured by the WM, the rxvt-
! URxvt*borderLess: boolean

! Compile frills: Disable the usage of the built-in block graphics/line drawing
! URxvt*skipBuiltinGlyphs: boolean

! Specifies the terminal type name to be set in the TERM environment variable; option
! URxvt*termName: termname
!URxvt*termName: urxvt

! Specifies number of lines (pixel height) to insert between each row of the display
! URxvt*lineSpace: number

! True: handle Meta (Alt) + keypress to set the 8th bit. False: handle Meta (Alt) +
! URxvt*meta8: boolean

! True: the mouse wheel scrolls a page full. False: the mouse wheel scrolls five lines
! URxvt*mouseWheelScrollPage: boolean

! True: store tabs as wide characters. False: interpret tabs as cursor movement only;
! URxvt*pastableTabs: boolean

! True: blink the cursor. False: do not blink the cursor [default]; option -bc.
! URxvt*cursorBlink: boolean

! True: Make the cursor underlined. False: Make the cursor a box [default]; option -uc.
! URxvt*cursorUnderline: boolean

! True: blank the pointer when a key is pressed or after a set number of seconds of
! URxvt*pointerBlank: boolean

! Mouse pointer foreground colour.
! URxvt*pointerColor: colour

! Mouse pointer background colour.
! URxvt*pointerColor2: colour

! Specifies number of seconds before blanking the pointer [default 2]. Use a large
! URxvt*pointerBlankDelay: number

! The string to send when the backspace key is pressed. If set to DEC or unset it will
! URxvt*backspacekey: string

! The string to send when the delete key (not the keypad delete key) is pressed. If
! URxvt*deletekey: string

! The characters used as delimiters for double-click word selection (whitespace
! URxvt*cutchars: string

! 
! URxvt*{|}

! OverTheSpot, OffTheSpot, Root; option -pt.
! URxvt*preeditType: style

! name of inputMethod to use; option -im.
! URxvt*inputMethod: name

! The locale to use for opening the IM. You can use an "LC_CTYPE" of e.g.  "de_DE.UTF-8"
! URxvt*imLocale: name

! Specify the font-set used for XIM styles "OverTheSpot" or "OffTheSpot". It must be a
! URxvt*imFont: fontset

! Change the meaning of triple-click selection with the left mouse button. Instead of
! URxvt*tripleclickwords: boolean

! Enables "insecure" mode. Rxvt-unicode offers some escape sequences that echo arbitrary
! URxvt*insecure: boolean

! Set the key to be interpreted as the Meta key to: alt, meta, hyper, super, mod1, mod2,
! URxvt*modifier: modifier

! Specify the reply rxvt-unicode sends to the shell when an ENQ (control-E) character is
! URxvt*answerbackString: string

! Turn on/off secondary screen (default enabled).
! URxvt*secondaryScreen: boolean

! Turn on/off secondary screen scroll (default enabled). If this option is enabled,
! URxvt*secondaryScroll: boolean

! Turn on/off hold window after exit support. If enabled, urxvt will not immediately
! URxvt*hold: boolean

! Sets the working directory for the shell (or the command specified via -e). The path
! URxvt*chdir: path

! Compile frills: Associate string with keysym sym. The intervening resource name
! URxvt*keysym.sym: string

! URxvt*perl-ext-common: string

! Comma-separated list(s) of perl extension scripts (default: "default") to use in this
! URxvt*perl-ext: string

! Perl code to be evaluated when all extensions have been registered. See the
! URxvt*perl-eval: string

! Colon-separated list of additional directories that hold extension scripts. When
! URxvt*perl-lib: path

! Additional selection patterns, see the urxvtperl(3) manpage for details.
! URxvt*selection.pattern-idx: perl-regex

! Selection auto-transform patterns, see the urxvtperl(3) manpage for details.
! URxvt*selection-autotransform.idx: perl-transform

! Sets the hotkey that starts the incremental scrollback buffer search (default: "M-s").
! URxvt*searchable-scrollback: keysym

! Specifies the program to be started with a URL argument. Used by the "selection-popup"
! URxvt*urlLauncher: string

! Compile frills: Sets the WM_TRANSIENT_FOR property to the given window id.
! URxvt*transient-for: windowid

! Compile frills: Sets override-redirect for the terminal window, making it almost
! URxvt*override-redirect: boolean

! Turn on/off ISO 14755 (default enabled).
! URxvt*iso14755: boolean
!URxvt*iso14755: false

! Turn on/off ISO 14755 5.2 mode (default enabled).@@@@THE SCROLLBAR
! URxvt*iso14755_52: boolean

! 
! URxvt*scrolled back using the scrollbar or by keystrokes. The normal urxvt scrollbar has arrows

! 
! URxvt*and its behaviour is fairly intuitive. The xterm-scrollbar is without arrows and its

! Scroll down with Button1 (xterm-scrollbar) or Shift-Next.  Scroll up with Button3 (xterm-
! URxvt*behaviour mimics that of xterm

! MOUSE REPORTING
! URxvt*scrollbar) or Shift-Prior.  Continuous scroll with Button2.

! 
! URxvt*selection/insertion, hold either the Shift or the Meta (Alt) key while performing the

! If mouse reporting mode is active, the normal scrollbar actions are disabled -- on the
! URxvt*desired mouse action.

! Button3 sends ESC [ 6 ~ (Next) and ESC [ 5 ~ (Prior), respectively. Similarly, clicking on
! URxvt*assumption that we are using a fullscreen application. Instead, pressing Button1 and

! THE SELECTION: SELECTING AND PASTING TEXT
! URxvt*the up and down arrows sends ESC [ A (Up) and ESC [ B (Down), respectively.

! You can, however, switch fonts at runtime using escape sequences, e.g.:
! URxvt*unicode. Bug me if you need this.

! URxvt*rxvt-unicode will automatically re-apply these fonts to the output so far.

! 
! URxvt*using the keyboard. It consists of 4 parts. The first part is available if rxvt-unicode

! 
! URxvt*has been compiled with "--enable-frills", the rest is available when rxvt-unicode was

! ·   5.1: Basic method
! URxvt*compiled with "--enable-iso14755".

! LOGIN STAMP
! URxvt*and B of ISO 14755, including part 5.2.

! 
! URxvt*urxvt tries to write an entry into the utmp(5) file so that it can be seen via the who(1)

! 
! URxvt*command, and can accept messages.  To allow this feature, urxvt may need to be installed

! COLOURS AND GRAPHICS
! URxvt*setuid root on some systems or setgid to root or to some other group on others.

! 
! URxvt*the same, and 72 (or 240 in 256 colour mode) colours arranged in an 4x4x4 (or 6x6x6)

! Here is a list of the ANSI colours with their names.
! URxvt*colour RGB cube plus a 8 (24) colour greyscale ramp.

! 
! URxvt*color0       (black)            = Black

! 
! URxvt*color1       (red)              = Red3

! 
! URxvt*color2       (green)            = Green3

! 
! URxvt*color3       (yellow)           = Yellow3

! 
! URxvt*color4       (blue)             = Blue3

! 
! URxvt*color5       (magenta)          = Magenta3

! 
! URxvt*color6       (cyan)             = Cyan3

! 
! URxvt*color7       (white)            = AntiqueWhite

! 
! URxvt*color8       (bright black)     = Grey25

! 
! URxvt*color9       (bright red)       = Red

! 
! URxvt*color10      (bright green)     = Green

! 
! URxvt*color11      (bright yellow)    = Yellow

! 
! URxvt*color12      (bright blue)      = Blue

! 
! URxvt*color13      (bright magenta)   = Magenta

! 
! URxvt*color14      (bright cyan)      = Cyan

! 
! URxvt*color15      (bright white)     = White

! 
! URxvt*foreground                      = Black

! It is also possible to specify the colour values of foreground, background, cursorColor,
! URxvt*background                      = White

! 
! URxvt*cursorColor2, colorBD, colorUL as a number 0-15, as a convenient shorthand to reference

! The following text gives values for the standard 88 colour mode (and values for the 256
! URxvt*the colour name of color0-color15.

! The RGB cube uses indices 16..79 (16..231) using the following formulas:
! URxvt*colour mode in parentheses).

! 
! URxvt*can be changed using resources currently, the rest can only be changed via command

! Applications are advised to use terminfo or command sequences to discover number and RGB
! URxvt*sequences ("escape codes").

! Note that -rv ("reverseVideo: True") simulates reverse video by always swapping the
! URxvt*values of all colours (yes, you can query this...).

! 
! URxvt*foreground/background colours. This is in contrast to xterm(1) where the colours are only

! urxvt -fg Black -bg White -rv
! URxvt*swapped if they have not otherwise been specified. For example,

! ALPHA CHANNEL SUPPORT
! URxvt*would yield White on Black, while on xterm(1) it would yield Black on White.

! You can prefix any colour with an opaqueness percentage enclosed in brackets, i.e.
! URxvt*together, rxvt-unicode will do its own alpha channel management:

! "[50]red" is a half-transparent red, while "[95]#00ff00" is an almost opaque green. This
! URxvt*the colour, where 0 is completely transparent and 100 is completely opaque. For example,

! 
! URxvt*is the recommended format to specify transparency values, and works with all ways to

! For complete control, rxvt-unicode also supports "rgba:rrrr/gggg/bbbb/aaaa" (exactly four
! URxvt*specify a colour.

! 
! URxvt*hex digits/component) colour specifications, where the additional "aaaa" component

! 
! URxvt*specifies opacity (alpha) values. The minimum value of 0000 is completely transparent,

! 
! URxvt*while "ffff" is completely opaque). The two example colours from earlier could also be

! You probably need to specify "-depth 32", too, to force a visual with alpha channels, and
! URxvt*specified as "rgba:ff00/0000/0000/8000" and "rgba:0000/ff00/0000/f332".

! ARGB visuals out of the box, and rxvt-unicode just fudges around.
! URxvt*have the luck that your X-server uses ARGB pixel layout, as X is far from just supporting

! urxvt -depth 32 -bg rgba:0000/0000/0000/4444 -fg "[80]pink"
! URxvt*an almost opaque pink foreground:

! When using a background pixmap or pseudo-transparency, then the background colour will
! URxvt*your compositing manager (most interpret it as transparency of course).

! 
! URxvt*always behave as if it were completely transparent (so the background image shows

! 
! URxvt*instead), regardless of how it was specified, while other colours will either be

! 
! URxvt*transparent as specified (the background image will show through) on servers supporting

! Please note that due to bugs in Xft, specifying alpha values might result in garbage being
! URxvt*the RENDER extension, or fully opaque on servers not supporting the RENDER EXTENSION.

! ENVIRONMENT
! URxvt*displayed when the X-server does not support the RENDER extension.

! TERM
! URxvt*urxvt sets and/or uses the following environment variables:

! CURRENT PROJECT COORDINATOR
! URxvt*urxvt(7), urxvtc(1), urxvtd(1), xterm(1), sh(1), resize(1), X(1), pty(4), tty(4), utmp(5)

! me.QueensU.CA>
! URxvt*mj olesen <olesen


! Compile xft: Attempt to find a visual with the given bit depth; option
! URxvt*depth: bitdepth

! Compile xft: Turn on/off double-buffering for xft (default enabled).  On
! URxvt*buffered: boolean

! Create the window with the specified X window geometry [default 80x24];
! URxvt*geometry: geom
!URxvt*geometry: 92x56

! Use the specified colour as the windows background colour [default White];
! URxvt*background: colour

! Use the specified colour as the windows foreground colour [default Black];
! URxvt*foreground: colour

! Use the specified colour for the colour value n, where 0-7 corresponds to
! URxvt*colorn: colour

! 
! URxvt*colorBD: colour

! Use the specified colour to display bold or italic characters when the
! URxvt*colorIT: colour

! Use the specified colour to display underlined characters when the
! URxvt*colorUL: colour

! If set, use the specified colour as the colour for the underline itself. If
! URxvt*underlineColor: colour

! If set, use the specified colour as the background for highlighted
! URxvt*highlightColor: colour

! If set and highlightColor is set, use the specified colour as the foreground
! URxvt*highlightTextColor: colour

! Use the specified colour for the cursor. The default is to use the
! URxvt*cursorColor: colour

! Use the specified colour for the colour of the cursor text. For this to take
! URxvt*cursorColor2: colour

! True: simulate reverse video by foreground and background colours; option
! URxvt*reverseVideo: boolean

! True: specify that jump scrolling should be used. When receiving lots of
! URxvt*jumpScroll: boolean

! True: (the default) specify that skip scrolling should be used. When
! URxvt*skipScroll: boolean

! Turn on/off pseudo-transparency by using the root pixmap as background.
! URxvt*transparent: boolean

! Fade the text by the given percentage when focus is lost; option -fade.
! URxvt*fading: number

! Fade to this colour, when fading is used (see fading:). The default colour
! URxvt*fadeColor: colour

! Tint the transparent background with the given colour. If the RENDER
! URxvt*tintColor: colour

! Darken (0 .. 99) or lighten (101 .. 200) the transparent background.  A
! URxvt*shading: number

! Specify background blending type; option -blt.
! URxvt*blendType: string

! Apply gaussian blur with the specified radius to the transparent background;
! URxvt*blurRadius: number

! Set the application icon pixmap; option -icon.
! URxvt*iconFile: file

! Use the specified colour for the scrollbar [default #B2B2B2].
! URxvt*scrollColor: colour

! Use the specified colour for the scrollbars trough area [default #969696].
! URxvt*troughColor: colour

! The colour of the border around the text area and between the scrollbar and
! URxvt*borderColor: colour

! Use the specified image file for the background and also optionally specify
! URxvt*backgroundPixmap: file[;oplist]

! Specify the colon-delimited search path for finding background image files.
! URxvt*path: path

! Select the fonts to be used. This is a comma separated list of font names
! URxvt*font: fontlist

! URxvt*boldFont: fontlist

! 
! URxvt*italicFont: fontlist

! The font list to use for displaying bold, italic or bold italic characters,
! URxvt*boldItalicFont: fontlist

! When font styles are not enabled, or this option is enabled (True, option
! URxvt*intensityStyles: boolean

! Set window title string, the default title is the command-line specified
! URxvt*title: string

! Set the name used to label the windows icon or displayed in an icon manager
! URxvt*iconName: string

! True: de-iconify (map) on receipt of a bell character. False: no de-iconify
! URxvt*mapAlert: boolean

! True: set the urgency hint for the wm on receipt of a bell character.
! URxvt*urgentOnBell: boolean

! True: use visual bell on receipt of a bell character; option -vb.  False: no
! URxvt*visualBell: boolean

! True: start as a login shell by prepending a - to argv[0] of the shell;
! URxvt*loginShell: boolean

! True: inhibit writing record into the system log file utmp; option -ut.
! URxvt*utmpInhibit: boolean

! Specify a command pipe for vt100 printer [default lpr(1)]. Use Print to
! URxvt*print-pipe: string

! Set scrollbar style to rxvt, plain, next or xterm. plain is the authors
! URxvt*scrollstyle: mode

! Set the scrollbar width in pixels.
! URxvt*thickness: number

! True: enable the scrollbar [default]; option -sb. False: disable the
! URxvt*scrollBar: boolean

! True: place the scrollbar on the right of the window; option -sr.  False:
! URxvt*scrollBar_right: boolean

! True: display an rxvt scrollbar without a trough; option -st.  False:
! URxvt*scrollBar_floating: boolean

! Align the top, bottom or centre [default] of the scrollbar thumb with the
! URxvt*scrollBar_align: mode

! True: scroll to bottom when tty receives output; option -si.  False: do not
! URxvt*scrollTtyOutput: boolean

! True: scroll with scrollback buffer when tty receives new lines (i.e.  try
! URxvt*scrollWithBuffer: boolean

! True: scroll to bottom when a non-special key is pressed. Special keys are
! URxvt*scrollTtyKeypress: boolean

! Save number lines in the scrollback buffer [default 64]. This resource is
! URxvt*saveLines: number

! Internal border of number pixels. This resource is limited to 100; option
! URxvt*internalBorder: number

! External border of number pixels. This resource is limited to 100; option
! URxvt*externalBorder: number

! Set MWM hints to request a borderless window, i.e. if honoured by the WM,
! URxvt*borderLess: boolean

! Compile frills: Disable the usage of the built-in block graphics/line
! URxvt*skipBuiltinGlyphs: boolean

! Specifies the terminal type name to be set in the TERM environment variable;
! URxvt*termName: termname

! Specifies number of lines (pixel height) to insert between each row of the
! URxvt*lineSpace: number
!URxvt*lineSpace: 0

! True: handle Meta (Alt) + keypress to set the 8th bit. False: handle Meta
! URxvt*meta8: boolean

! True: the mouse wheel scrolls a page full. False: the mouse wheel scrolls
! URxvt*mouseWheelScrollPage: boolean

! True: store tabs as wide characters. False: interpret tabs as cursor
! URxvt*pastableTabs: boolean

! True: blink the cursor. False: do not blink the cursor [default]; option
! URxvt*cursorBlink: boolean

! True: Make the cursor underlined. False: Make the cursor a box [default];
! URxvt*cursorUnderline: boolean

! True: blank the pointer when a key is pressed or after a set number of
! URxvt*pointerBlank: boolean

! Mouse pointer foreground colour.
! URxvt*pointerColor: colour

! Mouse pointer background colour.
! URxvt*pointerColor2: colour

! Specifies number of seconds before blanking the pointer [default 2]. Use a
! URxvt*pointerBlankDelay: number

! The string to send when the backspace key is pressed. If set to DEC or unset
! URxvt*backspacekey: string

! The string to send when the delete key (not the keypad delete key) is
! URxvt*deletekey: string

! The characters used as delimiters for double-click word selection
! URxvt*cutchars: string

! 
! URxvt*{|}

! OverTheSpot, OffTheSpot, Root; option -pt.
! URxvt*preeditType: style

! name of inputMethod to use; option -im.
! URxvt*inputMethod: name

! The locale to use for opening the IM. You can use an "LC_CTYPE" of e.g.
! URxvt*imLocale: name

! Specify the font-set used for XIM styles "OverTheSpot" or "OffTheSpot". It
! URxvt*imFont: fontset

! Change the meaning of triple-click selection with the left mouse button.
! URxvt*tripleclickwords: boolean

! Enables "insecure" mode. Rxvt-unicode offers some escape sequences that echo
! URxvt*insecure: boolean

! Set the key to be interpreted as the Meta key to: alt, meta, hyper, super,
! URxvt*modifier: modifier

! Specify the reply rxvt-unicode sends to the shell when an ENQ (control-E)
! URxvt*answerbackString: string

! Turn on/off secondary screen (default enabled).
! URxvt*secondaryScreen: boolean

! Turn on/off secondary screen scroll (default enabled). If this option is
! URxvt*secondaryScroll: boolean

! Turn on/off hold window after exit support. If enabled, urxvt will not
! URxvt*hold: boolean

! Sets the working directory for the shell (or the command specified via -e).
! URxvt*chdir: path

! Compile frills: Associate string with keysym sym. The intervening resource
! URxvt*keysym.sym: string

! URxvt*perl-ext-common: string

! Comma-separated list(s) of perl extension scripts (default: "default") to
! URxvt*perl-ext: string

! Perl code to be evaluated when all extensions have been registered. See the
! URxvt*perl-eval: string

! Colon-separated list of additional directories that hold extension scripts.
! URxvt*perl-lib: path

! Additional selection patterns, see the urxvtperl(3) manpage for details.
! URxvt*selection.pattern-idx: perl-regex

! Selection auto-transform patterns, see the urxvtperl(3) manpage for details.
! URxvt*selection-autotransform.idx: perl-transform

! Sets the hotkey that starts the incremental scrollback buffer search
! URxvt*searchable-scrollback: keysym

! Specifies the program to be started with a URL argument. Used by the
! URxvt*urlLauncher: string

! Compile frills: Sets the WM_TRANSIENT_FOR property to the given window id.
! URxvt*transient-for: windowid

! Compile frills: Sets override-redirect for the terminal window, making it
! URxvt*override-redirect: boolean

! Turn on/off ISO 14755 (default enabled).
! URxvt*iso14755: boolean

! Turn on/off ISO 14755 5.2 mode (default enabled).@@@@THE SCROLLBAR
! URxvt*iso14755_52: boolean

! 
! URxvt*and can be scrolled back using the scrollbar or by keystrokes. The normal urxvt

! 
! URxvt*scrollbar has arrows and its behaviour is fairly intuitive. The xterm-scrollbar

! Scroll down with Button1 (xterm-scrollbar) or Shift-Next.  Scroll up with
! URxvt*is without arrows and its behaviour mimics that of xterm

! 
! URxvt*text selection/insertion, hold either the Shift or the Meta (Alt) key while

! If mouse reporting mode is active, the normal scrollbar actions are disabled --
! URxvt*performing the desired mouse action.

! Button1 and Button3 sends ESC [ 6 ~ (Next) and ESC [ 5 ~ (Prior), respectively.
! URxvt*on the assumption that we are using a fullscreen application. Instead, pressing

! Selecting:
! URxvt*xterm(1).

! You can, however, switch fonts at runtime using escape sequences, e.g.:
! URxvt*in rxvt-unicode. Bug me if you need this.

! URxvt*rxvt-unicode will automatically re-apply these fonts to the output so far.

! 
! URxvt*character codes using the keyboard. It consists of 4 parts. The first part is

! 
! URxvt*available if rxvt-unicode has been compiled with "--enable-frills", the rest is

! ·   5.1: Basic method
! URxvt*available when rxvt-unicode was compiled with "--enable-iso14755".

! LOGIN STAMP
! URxvt*scenario A and B of ISO 14755, including part 5.2.

! 
! URxvt*urxvt tries to write an entry into the utmp(5) file so that it can be seen via

! 
! URxvt*the who(1) command, and can accept messages.  To allow this feature, urxvt may

! 
! URxvt*need to be installed setuid root on some systems or setgid to root or to some

! COLOURS AND GRAPHICS
! URxvt*other group on others.

! 
! URxvt*up to 88/256 colours: 8 ANSI colours plus high-intensity (potentially

! 
! URxvt*bold/blink) versions of the same, and 72 (or 240 in 256 colour mode) colours

! 
! URxvt*arranged in an 4x4x4 (or 6x6x6) colour RGB cube plus a 8 (24) colour greyscale

! Here is a list of the ANSI colours with their names.
! URxvt*ramp.

! 
! URxvt*color0       (black)            = Black

! 
! URxvt*color1       (red)              = Red3

! 
! URxvt*color2       (green)            = Green3

! 
! URxvt*color3       (yellow)           = Yellow3

! 
! URxvt*color4       (blue)             = Blue3

! 
! URxvt*color5       (magenta)          = Magenta3

! 
! URxvt*color6       (cyan)             = Cyan3

! 
! URxvt*color7       (white)            = AntiqueWhite

! 
! URxvt*color8       (bright black)     = Grey25

! 
! URxvt*color9       (bright red)       = Red

! 
! URxvt*color10      (bright green)     = Green

! 
! URxvt*color11      (bright yellow)    = Yellow

! 
! URxvt*color12      (bright blue)      = Blue

! 
! URxvt*color13      (bright magenta)   = Magenta

! 
! URxvt*color14      (bright cyan)      = Cyan

! 
! URxvt*color15      (bright white)     = White

! 
! URxvt*foreground                      = Black

! It is also possible to specify the colour values of foreground, background,
! URxvt*background                      = White

! 
! URxvt*cursorColor, cursorColor2, colorBD, colorUL as a number 0-15, as a convenient

! The following text gives values for the standard 88 colour mode (and values for
! URxvt*shorthand to reference the colour name of color0-color15.

! The RGB cube uses indices 16..79 (16..231) using the following formulas:
! URxvt*the 256 colour mode in parentheses).

! Together, all those colours implement the 88 (256) colour xterm colours. Only
! URxvt*cube.

! 
! URxvt*the first 16 can be changed using resources currently, the rest can only be

! Applications are advised to use terminfo or command sequences to discover number
! URxvt*changed via command sequences ("escape codes").

! Note that -rv ("reverseVideo: True") simulates reverse video by always swapping
! URxvt*and RGB values of all colours (yes, you can query this...).

! 
! URxvt*the foreground/background colours. This is in contrast to xterm(1) where the

! urxvt -fg Black -bg White -rv
! URxvt*colours are only swapped if they have not otherwise been specified. For example,

! ALPHA CHANNEL SUPPORT
! URxvt*would yield White on Black, while on xterm(1) it would yield Black on White.

! You can prefix any colour with an opaqueness percentage enclosed in brackets,
! URxvt*act together, rxvt-unicode will do its own alpha channel management:

! 
! URxvt*i.e. "[percent]", where "percent" is a decimal percentage (0-100) that specifies

! 
! URxvt*the opacity of the colour, where 0 is completely transparent and 100 is

! "[95]#00ff00" is an almost opaque green. This is the recommended format to
! URxvt*completely opaque. For example, "[50]red" is a half-transparent red, while

! For complete control, rxvt-unicode also supports "rgba:rrrr/gggg/bbbb/aaaa"
! URxvt*specify transparency values, and works with all ways to specify a colour.

! 
! URxvt*completely transparent, while "ffff" is completely opaque). The two example

! "rgba:0000/ff00/0000/f332".
! URxvt*colours from earlier could also be specified as "rgba:ff00/0000/0000/8000" and

! 
! URxvt*channels, and have the luck that your X-server uses ARGB pixel layout, as X is

! 
! URxvt*far from just supporting ARGB visuals out of the box, and rxvt-unicode just

! For example, the following selects an almost completely transparent black
! URxvt*fudges around.

! urxvt -depth 32 -bg rgba:0000/0000/0000/4444 -fg "[80]pink"
! URxvt*background, and an almost opaque pink foreground:

! When using a background pixmap or pseudo-transparency, then the background
! URxvt*is up to your compositing manager (most interpret it as transparency of course).

! 
! URxvt*colour will always behave as if it were completely transparent (so the

! 
! URxvt*background image shows instead), regardless of how it was specified, while other

! 
! URxvt*colours will either be transparent as specified (the background image will show

! 
! URxvt*through) on servers supporting the RENDER extension, or fully opaque on servers

! Please note that due to bugs in Xft, specifying alpha values might result in
! URxvt*not supporting the RENDER EXTENSION.

! ENVIRONMENT
! URxvt*garbage being displayed when the X-server does not support the RENDER extension.

! TERM
! URxvt*urxvt sets and/or uses the following environment variables:

! 
! URxvt*urxvt(7), urxvtc(1), urxvtd(1), xterm(1), sh(1), resize(1), X(1), pty(4),

! CURRENT PROJECT COORDINATOR
! URxvt*tty(4), utmp(5)

! me.QueensU.CA>
! URxvt*mj olesen <olesen


! Compile xft: Attempt to find a visual with the given bit depth; option
! URxvt*depth: bitdepth

! Compile xft: Turn on/off double-buffering for xft (default enabled).  On
! URxvt*buffered: boolean

! Create the window with the specified X window geometry [default 80x24];
! URxvt*geometry: geom

! Use the specified colour as the windows background colour [default White];
! URxvt*background: colour

! Use the specified colour as the windows foreground colour [default Black];
! URxvt*foreground: colour

! Use the specified colour for the colour value n, where 0-7 corresponds to
! URxvt*colorn: colour

! 
! URxvt*colorBD: colour

! Use the specified colour to display bold or italic characters when the
! URxvt*colorIT: colour

! Use the specified colour to display underlined characters when the
! URxvt*colorUL: colour

! If set, use the specified colour as the colour for the underline itself. If
! URxvt*underlineColor: colour

! If set, use the specified colour as the background for highlighted
! URxvt*highlightColor: colour

! If set and highlightColor is set, use the specified colour as the foreground
! URxvt*highlightTextColor: colour

! Use the specified colour for the cursor. The default is to use the
! URxvt*cursorColor: colour

! Use the specified colour for the colour of the cursor text. For this to take
! URxvt*cursorColor2: colour

! True: simulate reverse video by foreground and background colours; option
! URxvt*reverseVideo: boolean

! True: specify that jump scrolling should be used. When receiving lots of
! URxvt*jumpScroll: boolean

! True: (the default) specify that skip scrolling should be used. When
! URxvt*skipScroll: boolean

! Turn on/off pseudo-transparency by using the root pixmap as background.
! URxvt*transparent: boolean

! Fade the text by the given percentage when focus is lost; option -fade.
! URxvt*fading: number

! Fade to this colour, when fading is used (see fading:). The default colour
! URxvt*fadeColor: colour

! Tint the transparent background with the given colour. If the RENDER
! URxvt*tintColor: colour

! Darken (0 .. 99) or lighten (101 .. 200) the transparent background.  A
! URxvt*shading: number

! Specify background blending type; option -blt.
! URxvt*blendType: string

! Apply gaussian blur with the specified radius to the transparent background;
! URxvt*blurRadius: number

! Set the application icon pixmap; option -icon.
! URxvt*iconFile: file

! Use the specified colour for the scrollbar [default #B2B2B2].
! URxvt*scrollColor: colour

! Use the specified colour for the scrollbars trough area [default #969696].
! URxvt*troughColor: colour

! The colour of the border around the text area and between the scrollbar and
! URxvt*borderColor: colour

! Use the specified image file for the background and also optionally specify
! URxvt*backgroundPixmap: file[;oplist]

! Specify the colon-delimited search path for finding background image files.
! URxvt*path: path

! Select the fonts to be used. This is a comma separated list of font names
! URxvt*font: fontlist

! URxvt*boldFont: fontlist

! 
! URxvt*italicFont: fontlist

! The font list to use for displaying bold, italic or bold italic characters,
! URxvt*boldItalicFont: fontlist

! When font styles are not enabled, or this option is enabled (True, option
! URxvt*intensityStyles: boolean

! Set window title string, the default title is the command-line specified
! URxvt*title: string

! Set the name used to label the windows icon or displayed in an icon manager
! URxvt*iconName: string

! True: de-iconify (map) on receipt of a bell character. False: no de-iconify
! URxvt*mapAlert: boolean

! True: set the urgency hint for the wm on receipt of a bell character.
! URxvt*urgentOnBell: boolean

! True: use visual bell on receipt of a bell character; option -vb.  False: no
! URxvt*visualBell: boolean

! True: start as a login shell by prepending a - to argv[0] of the shell;
! URxvt*loginShell: boolean

! True: inhibit writing record into the system log file utmp; option -ut.
! URxvt*utmpInhibit: boolean

! Specify a command pipe for vt100 printer [default lpr(1)]. Use Print to
! URxvt*print-pipe: string

! Set scrollbar style to rxvt, plain, next or xterm. plain is the authors
! URxvt*scrollstyle: mode

! Set the scrollbar width in pixels.
! URxvt*thickness: number

! True: enable the scrollbar [default]; option -sb. False: disable the
! URxvt*scrollBar: boolean
!URxvt*scrollBar: false

! True: place the scrollbar on the right of the window; option -sr.  False:
! URxvt*scrollBar_right: boolean
!URxvt*scrollBar_right: false

! True: display an rxvt scrollbar without a trough; option -st.  False:
! URxvt*scrollBar_floating: boolean

! Align the top, bottom or centre [default] of the scrollbar thumb with the
! URxvt*scrollBar_align: mode

! True: scroll to bottom when tty receives output; option -si.  False: do not
! URxvt*scrollTtyOutput: boolean

! True: scroll with scrollback buffer when tty receives new lines (i.e.  try
! URxvt*scrollWithBuffer: boolean

! True: scroll to bottom when a non-special key is pressed. Special keys are
! URxvt*scrollTtyKeypress: boolean

! Save number lines in the scrollback buffer [default 64]. This resource is
! URxvt*saveLines: number

! Internal border of number pixels. This resource is limited to 100; option
! URxvt*internalBorder: number
!URxvt*internalBorder: 5

! External border of number pixels. This resource is limited to 100; option
! URxvt*externalBorder: number
!URxvt*externalBorder: 0

! Set MWM hints to request a borderless window, i.e. if honoured by the WM,
! URxvt*borderLess: boolean
!URxvt*borderLess: false

! Compile frills: Disable the usage of the built-in block graphics/line
! URxvt*skipBuiltinGlyphs: boolean

! Specifies the terminal type name to be set in the TERM environment variable;
! URxvt*termName: termname

! Specifies number of lines (pixel height) to insert between each row of the
! URxvt*lineSpace: number

! True: handle Meta (Alt) + keypress to set the 8th bit. False: handle Meta
! URxvt*meta8: boolean

! True: the mouse wheel scrolls a page full. False: the mouse wheel scrolls
! URxvt*mouseWheelScrollPage: boolean

! True: store tabs as wide characters. False: interpret tabs as cursor
! URxvt*pastableTabs: boolean

! True: blink the cursor. False: do not blink the cursor [default]; option
! URxvt*cursorBlink: boolean

! True: Make the cursor underlined. False: Make the cursor a box [default];
! URxvt*cursorUnderline: boolean

! True: blank the pointer when a key is pressed or after a set number of
! URxvt*pointerBlank: boolean

! Mouse pointer foreground colour.
! URxvt*pointerColor: colour

! Mouse pointer background colour.
! URxvt*pointerColor2: colour

! Specifies number of seconds before blanking the pointer [default 2]. Use a
! URxvt*pointerBlankDelay: number

! The string to send when the backspace key is pressed. If set to DEC or unset
! URxvt*backspacekey: string

! The string to send when the delete key (not the keypad delete key) is
! URxvt*deletekey: string

! The characters used as delimiters for double-click word selection
! URxvt*cutchars: string

! 
! URxvt*{|}

! OverTheSpot, OffTheSpot, Root; option -pt.
! URxvt*preeditType: style

! name of inputMethod to use; option -im.
! URxvt*inputMethod: name

! The locale to use for opening the IM. You can use an "LC_CTYPE" of e.g.
! URxvt*imLocale: name

! Specify the font-set used for XIM styles "OverTheSpot" or "OffTheSpot". It
! URxvt*imFont: fontset

! Change the meaning of triple-click selection with the left mouse button.
! URxvt*tripleclickwords: boolean

! Enables "insecure" mode. Rxvt-unicode offers some escape sequences that echo
! URxvt*insecure: boolean

! Set the key to be interpreted as the Meta key to: alt, meta, hyper, super,
! URxvt*modifier: modifier

! Specify the reply rxvt-unicode sends to the shell when an ENQ (control-E)
! URxvt*answerbackString: string

! Turn on/off secondary screen (default enabled).
! URxvt*secondaryScreen: boolean

! Turn on/off secondary screen scroll (default enabled). If this option is
! URxvt*secondaryScroll: boolean

! Turn on/off hold window after exit support. If enabled, urxvt will not
! URxvt*hold: boolean

! Sets the working directory for the shell (or the command specified via -e).
! URxvt*chdir: path

! Compile frills: Associate string with keysym sym. The intervening resource
! URxvt*keysym.sym: string

! URxvt*perl-ext-common: string

! Comma-separated list(s) of perl extension scripts (default: "default") to
! URxvt*perl-ext: string

! Perl code to be evaluated when all extensions have been registered. See the
! URxvt*perl-eval: string

! Colon-separated list of additional directories that hold extension scripts.
! URxvt*perl-lib: path

! Additional selection patterns, see the urxvtperl(3) manpage for details.
! URxvt*selection.pattern-idx: perl-regex

! Selection auto-transform patterns, see the urxvtperl(3) manpage for details.
! URxvt*selection-autotransform.idx: perl-transform

! Sets the hotkey that starts the incremental scrollback buffer search
! URxvt*searchable-scrollback: keysym

! Specifies the program to be started with a URL argument. Used by the
! URxvt*urlLauncher: string

! Compile frills: Sets the WM_TRANSIENT_FOR property to the given window id.
! URxvt*transient-for: windowid

! Compile frills: Sets override-redirect for the terminal window, making it
! URxvt*override-redirect: boolean

! Turn on/off ISO 14755 (default enabled).
! URxvt*iso14755: boolean

! Turn on/off ISO 14755 5.2 mode (default enabled).@@@@THE SCROLLBAR
! URxvt*iso14755_52: boolean

! 
! URxvt*and can be scrolled back using the scrollbar or by keystrokes. The normal urxvt

! 
! URxvt*scrollbar has arrows and its behaviour is fairly intuitive. The xterm-scrollbar

! Scroll down with Button1 (xterm-scrollbar) or Shift-Next.  Scroll up with
! URxvt*is without arrows and its behaviour mimics that of xterm

! 
! URxvt*text selection/insertion, hold either the Shift or the Meta (Alt) key while

! If mouse reporting mode is active, the normal scrollbar actions are disabled --
! URxvt*performing the desired mouse action.

! Button1 and Button3 sends ESC [ 6 ~ (Next) and ESC [ 5 ~ (Prior), respectively.
! URxvt*on the assumption that we are using a fullscreen application. Instead, pressing

! Selecting:
! URxvt*xterm(1).

! You can, however, switch fonts at runtime using escape sequences, e.g.:
! URxvt*in rxvt-unicode. Bug me if you need this.

! URxvt*rxvt-unicode will automatically re-apply these fonts to the output so far.

! 
! URxvt*character codes using the keyboard. It consists of 4 parts. The first part is

! 
! URxvt*available if rxvt-unicode has been compiled with "--enable-frills", the rest is

! ·   5.1: Basic method
! URxvt*available when rxvt-unicode was compiled with "--enable-iso14755".

! LOGIN STAMP
! URxvt*scenario A and B of ISO 14755, including part 5.2.

! 
! URxvt*urxvt tries to write an entry into the utmp(5) file so that it can be seen via

! 
! URxvt*the who(1) command, and can accept messages.  To allow this feature, urxvt may

! 
! URxvt*need to be installed setuid root on some systems or setgid to root or to some

! COLOURS AND GRAPHICS
! URxvt*other group on others.

! 
! URxvt*up to 88/256 colours: 8 ANSI colours plus high-intensity (potentially

! 
! URxvt*bold/blink) versions of the same, and 72 (or 240 in 256 colour mode) colours

! 
! URxvt*arranged in an 4x4x4 (or 6x6x6) colour RGB cube plus a 8 (24) colour greyscale

! Here is a list of the ANSI colours with their names.
! URxvt*ramp.

! 
! URxvt*color0       (black)            = Black

! 
! URxvt*color1       (red)              = Red3

! 
! URxvt*color2       (green)            = Green3

! 
! URxvt*color3       (yellow)           = Yellow3

! 
! URxvt*color4       (blue)             = Blue3

! 
! URxvt*color5       (magenta)          = Magenta3

! 
! URxvt*color6       (cyan)             = Cyan3

! 
! URxvt*color7       (white)            = AntiqueWhite

! 
! URxvt*color8       (bright black)     = Grey25

! 
! URxvt*color9       (bright red)       = Red

! 
! URxvt*color10      (bright green)     = Green

! 
! URxvt*color11      (bright yellow)    = Yellow

! 
! URxvt*color12      (bright blue)      = Blue

! 
! URxvt*color13      (bright magenta)   = Magenta

! 
! URxvt*color14      (bright cyan)      = Cyan

! 
! URxvt*color15      (bright white)     = White

! 
! URxvt*foreground                      = Black

! It is also possible to specify the colour values of foreground, background,
! URxvt*background                      = White

! 
! URxvt*cursorColor, cursorColor2, colorBD, colorUL as a number 0-15, as a convenient

! The following text gives values for the standard 88 colour mode (and values for
! URxvt*shorthand to reference the colour name of color0-color15.

! The RGB cube uses indices 16..79 (16..231) using the following formulas:
! URxvt*the 256 colour mode in parentheses).

! Together, all those colours implement the 88 (256) colour xterm colours. Only
! URxvt*cube.

! 
! URxvt*the first 16 can be changed using resources currently, the rest can only be

! Applications are advised to use terminfo or command sequences to discover number
! URxvt*changed via command sequences ("escape codes").

! Note that -rv ("reverseVideo: True") simulates reverse video by always swapping
! URxvt*and RGB values of all colours (yes, you can query this...).

! 
! URxvt*the foreground/background colours. This is in contrast to xterm(1) where the

! urxvt -fg Black -bg White -rv
! URxvt*colours are only swapped if they have not otherwise been specified. For example,

! ALPHA CHANNEL SUPPORT
! URxvt*would yield White on Black, while on xterm(1) it would yield Black on White.

! You can prefix any colour with an opaqueness percentage enclosed in brackets,
! URxvt*act together, rxvt-unicode will do its own alpha channel management:

! 
! URxvt*i.e. "[percent]", where "percent" is a decimal percentage (0-100) that specifies

! 
! URxvt*the opacity of the colour, where 0 is completely transparent and 100 is

! "[95]#00ff00" is an almost opaque green. This is the recommended format to
! URxvt*completely opaque. For example, "[50]red" is a half-transparent red, while

! For complete control, rxvt-unicode also supports "rgba:rrrr/gggg/bbbb/aaaa"
! URxvt*specify transparency values, and works with all ways to specify a colour.

! 
! URxvt*completely transparent, while "ffff" is completely opaque). The two example

! "rgba:0000/ff00/0000/f332".
! URxvt*colours from earlier could also be specified as "rgba:ff00/0000/0000/8000" and

! 
! URxvt*channels, and have the luck that your X-server uses ARGB pixel layout, as X is

! 
! URxvt*far from just supporting ARGB visuals out of the box, and rxvt-unicode just

! For example, the following selects an almost completely transparent black
! URxvt*fudges around.

! urxvt -depth 32 -bg rgba:0000/0000/0000/4444 -fg "[80]pink"
! URxvt*background, and an almost opaque pink foreground:

! When using a background pixmap or pseudo-transparency, then the background
! URxvt*is up to your compositing manager (most interpret it as transparency of course).

! 
! URxvt*colour will always behave as if it were completely transparent (so the

! 
! URxvt*background image shows instead), regardless of how it was specified, while other

! 
! URxvt*colours will either be transparent as specified (the background image will show

! 
! URxvt*through) on servers supporting the RENDER extension, or fully opaque on servers

! Please note that due to bugs in Xft, specifying alpha values might result in
! URxvt*not supporting the RENDER EXTENSION.

! ENVIRONMENT
! URxvt*garbage being displayed when the X-server does not support the RENDER extension.

! TERM
! URxvt*urxvt sets and/or uses the following environment variables:

! 
! URxvt*urxvt(7), urxvtc(1), urxvtd(1), xterm(1), sh(1), resize(1), X(1), pty(4),

! CURRENT PROJECT COORDINATOR
! URxvt*tty(4), utmp(5)

! me.QueensU.CA>
! URxvt*mj olesen <olesen


!! Xft settings ----------------------------
!Xft.dpi: 96
!Xft.antialias: true
!Xft.rgba: rgb
!Xft.hinting: true
!Xft.hintstyle: hintslight
!!------------------------------------------
!
! URxvt*termName:           string
! URxvt*geometry:           geometry
! URxvt*chdir:              string
! URxvt*reverseVideo:       boolean
! URxvt*loginShell:         boolean
! URxvt*jumpScroll:         boolean
! URxvt*skipScroll:         boolean
! URxvt*pastableTabs:       boolean
! URxvt*scrollstyle:        mode
! URxvt*scrollBar:          boolean
! URxvt*scrollBar_right:    boolean
! URxvt*scrollBar_align:    mode
! URxvt*thickness:          number
! URxvt*scrollTtyOutput:    boolean
! URxvt*scrollTtyKeypress:  boolean
! URxvt*scrollWithBuffer:   boolean
! URxvt*inheritPixmap:      boolean
! URxvt*transparent:        boolean
! URxvt*tintColor:          color
! URxvt*shading:            number
! URxvt*blurRadius:         HxV
! URxvt*fading:             number
! URxvt*fadeColor:          color
! URxvt*utmpInhibit:        boolean
! URxvt*urgentOnBell:       boolean
! URxvt*visualBell:         boolean
! URxvt*mapAlert:           boolean
! URxvt*meta8:              boolean
! URxvt*mouseWheelScrollPage:   boolean
! URxvt*tripleclickwords:   boolean
! URxvt*insecure:           boolean
! URxvt*cursorUnderline:    boolean
! URxvt*cursorBlink:        boolean
! URxvt*pointerBlank:       boolean
! URxvt*background:         color
! URxvt*foreground:         color
! URxvt*color0:             color
! URxvt*color1:             color
! URxvt*color2:             color
! URxvt*color3:             color
! URxvt*color4:             color
! URxvt*color5:             color
! URxvt*color6:             color
! URxvt*color7:             color
! URxvt*color8:             color
! URxvt*color9:             color
! URxvt*color10:            color
! URxvt*color11:            color
! URxvt*color12:            color
! URxvt*color13:            color
! URxvt*color14:            color
! URxvt*color15:            color
! URxvt*colorBD:            color
! URxvt*colorIT:            color
! URxvt*colorUL:            color
! URxvt*colorRV:            color
! URxvt*underlineColor:     color
! URxvt*scrollColor:        color
! URxvt*troughColor:        color
! URxvt*highlightColor:     color
! URxvt*cursorColor:        color
! URxvt*cursorColor2:       color
! URxvt*pointerColor:       color
! URxvt*pointerColor2:      color
! URxvt*borderColor:        color
! URxvt*path:               search path
! URxvt*backgroundPixmap:   file[;geom]
! URxvt*iconFile:           file
! URxvt*font:               fontname
! URxvt*boldFont:           fontname
! URxvt*italicFont:         fontname
! URxvt*boldItalicFont:     fontname
! URxvt*intensityStyles:    boolean
! URxvt*inputMethod:        name
! URxvt*preeditType:        style
! URxvt*imLocale:           string
! URxvt*imFont:             fontname
! URxvt*title:              string
! URxvt*iconName:           string
! URxvt*saveLines:          number
! URxvt*depth:              number
! URxvt*buffered:           boolean
! URxvt*transient-for:      windowid
! URxvt*override-redirect:  boolean
! URxvt*hold:               boolean
! URxvt*externalBorder:     number
! URxvt*internalBorder:     number
! URxvt*borderLess:         boolean
! URxvt*lineSpace:          number
! URxvt*letterSpace:        number
! URxvt*skipBuiltinGlyphs:  boolean
! URxvt*pointerBlankDelay:  number
! URxvt*backspacekey:       string
! URxvt*deletekey:          string
! URxvt*print-pipe:         string
! URxvt*modifier:           modifier
! URxvt*cutchars:           string
! URxvt*answerbackString:   string
! URxvt*secondaryScreen:    boolean
! URxvt*secondaryScroll:    boolean
! URxvt*perl-lib:           string
! URxvt*perl-eval:          perl-eval
! URxvt*perl-ext-common:    string
! URxvt*perl-ext:           string
! URxvt*iso14755:           boolean
! URxvt*iso14755_52:        boolean
! URxvt*xrm:                string
! URxvt*keysym.sym:         keysym
!
! ryan

*geometry:				92x46
*iconFile:				/usr/share/icons/Faience/apps/scalable/utilities-terminal.svg
*letterSpace:			-1
*lineSpace:				0
*scrollBar:				false
*internalBorder:		5
*externalBorder:		0
*borderLess:			false

*foreground:	 		#d0d0d0
*background:	 		#151515
*cursorColor:	 		#d0d0d0
*color0:		 		#151515
*color1:		 		#ac4142
*color2:		 		#90a959
*color3:		 		#f4bf75
*color4:		 		#6a9fb5
*color5:		 		#aa759f
*color6:		 		#75b5aa
*color7:		 		#d0d0d0
*color8:		 		#505050
*color9:		 		#d28445
*color10:		 		#202020
*color11:		 		#303030
*color12:		 		#b0b0b0
*color13:		 		#e0e0e0
*color14:		 		#8f5536
*color15:		 		#f5f5f5

*font:				 	xft:DejaVu Sans Mono:pixelsize=9
*boldFont:			 	xft:DejaVu Sans Mono:pixelsize=9
*italicFont:		 	xft:DejaVu Sans Mono:italic:pixelsize=9
*boldItalicFont:	 	xft:DejaVu Sans Mono:bolditalic:pixelsize=9

! Xft settings ----------------------------
Xft.dpi:		 		96
Xft.antialias:	 		true
Xft.rgba:		 		rgb
Xft.hinting:	 		true
Xft.hintstyle:	 		hintslight
!------------------------------------------

! Mouse pointer foreground colour.
URxvt*pointerColor: #151515

! Mouse pointer background colour.
URxvt*pointerColor2: #151515

!load scripts
URxvt.perl-lib: /home/ry/.urxvt/perl/
!set up clipboard for copy and pasting
URxvt.keysym.Shift-Control-V: perl:clipboard:paste
URxvt.iso14755: False
URxvt.perl-ext-common: default,clipboard

URxvt*saveLines: 10000
