# remap prefix to Control + a
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind C-a last-window

#keybindings to make resizing easier
bind -r C-h 	resize-pane -L     	# C-a then C-h to resize to the left
bind -r M-left 	resize-pane -L  	# C-a then arrow-left to resize to the left
bind -r C-j 	resize-pane -D     	# C-a then C-j to resize to the down
bind -r M-down 	resize-pane -D  	# C-a then arrow-down to resize to the down
bind -r C-k 	resize-pane -U     	# C-a then C-k to resize to the up
bind -r M-up 	resize-pane -U    	# C-a then arrow-up to resize to the up
bind -r C-l 	resize-pane -R     	# C-a then C-l to resize to the right
bind -r M-right resize-pane -R 		# C-a then arrow-right to resize to the right

## nested tmux, obey me
#bind-key a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# Automatically set window title
setw -g automatic-rename on
set -g set-titles on

# No delay for escape key press
set -sg escape-time 0
  
# quick pane cycling
#unbind ^A
#bind ^A select-pane -t :.+

# splits
bind \ split-window -h
bind - split-window -v

# use mouse options
#setw -g mode-mouse on
setw -g mode-mouse off
#set -g mouse-select-pane on
set -g mouse-select-pane off

# resize panes with mouse (drag borders)
#set -g mouse-resize-pane on

# start windows at 1 rather than at 0
set -g base-index 1

# start panes at 1 instead of 0
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

#setw -g monitor activity on
set -g visual-activity on

# move status bar to top of window
set -g status-position top

# nothing on left and right
set -g status-left ''
set -g status-right ''

# no * on active window
setw -g window-status-format '#I:#W '
setw -g window-status-current-format '#I:#W#F '
#setw -g window-status-format "□ "
#setw -g window-status-current-format "▧ "
#set -g status-justify centre

##set terminal emulator window title
#set -g set-titles on
#set -g set-titles-string "#T"

# status line
set -g status-utf8 on
set -g status-justify left

############ COLORS START ############
#set -g default-terminal "screen-256color"

# default statusbar colours
set -g status-bg default
set -g status-fg "#d0d0d0"
# set-option -g status-attr default

# default window title colours
setw -g window-status-bg default
setw -g window-status-fg "#505050"
#setw -g window-status-attr bright

# active window title colours
#if-shell "uname -a | grep -q 'g62x'" "set -g window-status-current-fg '#6a9fb5'"
#if-shell "uname -a | grep -q 'devbox'" "set -g window-status-current-fg '#f4bf75'"
#if-shell "uname -a | grep -q 'debian'" "set -g window-status-current-fg '#aa759f'"
if-shell "uname -a | grep -q 'g62x'" "set -g window-status-current-fg 'blue'"
if-shell "uname -a | grep -q 'devbox'" "set -g window-status-current-fg 'yellow'"
if-shell "uname -a | grep -q 'precise32'" "set -g window-status-current-fg 'yellow'"
if-shell "uname -a | grep -q 'vlad'" "set -g window-status-current-fg 'yellow'"
if-shell "uname -a | grep -q 'debian'" "set -g window-status-current-fg 'magenta'"
#setw -g window-status-current-attr bright
#setw -g window-status-current-bg default
 setw -g window-status-current-bg "red"

# pane border
set -g pane-border-fg "#333333"
set -g pane-active-border-fg "#d0d0d0"

# message text
set -g message-bg "#202020"
set -g message-fg "#d28445"

# pane number display
set -g display-panes-active-colour colour033
set -g display-panes-colour colour166

# clock
setw -g clock-mode-colour colour064

############ COLORS END ############

# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# vim style copy paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
